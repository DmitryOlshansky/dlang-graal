diff --git a/src/main/java/org/dlang/dmd/lexer.java b/src/main/java/org/dlang/dmd/lexer.java
index a4897cc..40e450a 100644
--- a/src/main/java/org/dlang/dmd/lexer.java
+++ b/src/main/java/org/dlang/dmd/lexer.java
@@ -382,26 +382,17 @@ public class lexer {
                                         if (id.equals(Id.DATE))
                                         {
                                             (t).ustring = pcopy(ptr(lexer.scandate));
-                                            /*goto Lstr*/
-                                            (t).value = TOK.string_;
-                                            (t).postfix = (byte)0;
-                                            (t).len = strlen((t).ustring);
+                                            /*goto Lstr*/throw Dispatch.INSTANCE;
                                         }
                                         else if (id.equals(Id.TIME))
                                         {
                                             (t).ustring = pcopy(ptr(lexer.scantime));
-                                            /*goto Lstr*/
-                                            (t).value = TOK.string_;
-                                            (t).postfix = (byte)0;
-                                            (t).len = strlen((t).ustring);
+                                            /*goto Lstr*/throw Dispatch.INSTANCE;
                                         }
                                         else if (id.equals(Id.VENDOR))
                                         {
                                             (t).ustring = pcopy((toBytePtr(xarraydup(global.vendor))));
-                                            /*goto Lstr*/
-                                            (t).value = TOK.string_;
-                                            (t).postfix = (byte)0;
-                                            (t).len = strlen((t).ustring);
+                                            /*goto Lstr*/throw Dispatch.INSTANCE;
                                         }
                                         else if (id.equals(Id.TIMESTAMP))
                                         {
@@ -993,10 +984,10 @@ public class lexer {
         }
 
         public  int escapeSequence() {
-            return escapeSequence(this.token.loc, this.diagnosticReporter, this.p);
+            return Lexer.escapeSequence(this.token.loc, this.diagnosticReporter, this.p);
         }
 
-        public int escapeSequence(Loc loc, DiagnosticReporter handler, BytePtr sequence) {
+        public static int escapeSequence(Loc loc, DiagnosticReporter handler, BytePtr sequence) {
             {
                 assert(handler != null);
             }
@@ -1005,7 +996,7 @@ public class lexer {
                     assert(handler != null);
                 }
             }
-            p = pcopy(sequence);
+            BytePtr p = pcopy(sequence);
             try {
                 int c = (p.get() & 0xFF);
                 int ndigits = 0;
@@ -1153,6 +1144,7 @@ public class lexer {
                 return c;
             }
             finally {
+                sequence = pcopy(p);
             }
         }
 
@@ -1283,6 +1275,7 @@ public class lexer {
                     } while(__dispatch10 != 0);
                 }
             }
+            throw new AssertionError("Unreachable code!");
         }
 
         public  void delimitedStringConstant(Token result) {
@@ -1675,25 +1668,18 @@ public class lexer {
                                         /*goto Ldone*/throw Dispatch0.INSTANCE;
                                     if ((isalpha((this.p.get(1) & 0xFF))) != 0 || (this.p.get(1) & 0xFF) == 95 || ((this.p.get(1) & 0xFF) & 128) != 0)
                                         /*goto Ldone*/throw Dispatch0.INSTANCE;
-                                    /*goto Lreal*/
-                                    this.p = pcopy(start);
-                                    return this.inreal(t);
+                                    /*goto Lreal*/throw Dispatch.INSTANCE;
                                 case 105:
                                 case 102:
                                 case 70:
-                                    /*goto Lreal*/
-                                    this.p = pcopy(start);
-                                    return this.inreal(t);
+                                    /*goto Lreal*/throw Dispatch.INSTANCE;
                                 case 95:
                                     this.p.plusAssign(1);
                                     base = 8;
                                     break;
                                 case 76:
-                                    if ((this.p.get(1) & 0xFF) == 105) {
-                                        /*goto Lreal*/
-                                        this.p = pcopy(start);
-                                        return this.inreal(t);
-                                    }
+                                    if ((this.p.get(1) & 0xFF) == 105)
+                                        /*goto Lreal*/throw Dispatch.INSTANCE;
                                     break;
                                 default:
                                 {
@@ -2315,6 +2301,7 @@ public class lexer {
                                         continue L_outer8;
                                     /*goto Lnewline*/{ __dispatch26 = -1; continue dispatched_26; }
                                 default:
+                                {
                                     if ((c & 0xFF) == 226)
                                     {
                                         if ((q.get(1) & 0xFF) == 128 && (q.get(2) & 0xFF) == 168 || (q.get(2) & 0xFF) == 169)
@@ -2329,6 +2316,7 @@ public class lexer {
                                 case -1:
                                 __dispatch26 = 0;
                                     c = (byte)10;
+                                }
                                 case 10:
                                     linestart = 1;
                                     trimTrailingWhitespace.invoke();
