diff --git a/src/main/java/org/dlang/dmd/astbase.java b/src/main/java/org/dlang/dmd/astbase.java
index c6818b1..efe5bdd 100644
--- a/src/main/java/org/dlang/dmd/astbase.java
+++ b/src/main/java/org/dlang/dmd/astbase.java
@@ -2452,7 +2452,12 @@ public class astbase {
             public int baseok = 0;
             // Erasure: __ctor<Loc, Identifier, Ptr, Ptr, boolean>
             public  ClassDeclaration(Loc loc, Identifier id, Ptr<DArray<Ptr<BaseClass>>> baseclasses, Ptr<DArray<Dsymbol>> members, boolean inObject) {
-                super(loc, id == null ? Identifier.generateId(new BytePtr("__anonclass")) : id );
+                if (id == null)
+                {
+                    id = Identifier.generateId(new BytePtr("__anonclass"));
+                }
+                assert(id != null);
+                super(loc, id);
                 if (baseclasses != null)
                 {
                     this.baseclasses = pcopy(baseclasses);
@@ -6316,7 +6321,7 @@ public class astbase {
                                 break;
                             case 31:
                             case 14:
-                                this.value = (long)(int)this.value;
+                                this.value = (long)(byte)this.value;
                                 break;
                             case 15:
                                 this.value = (long)(int)this.value;
@@ -7137,7 +7142,11 @@ public class astbase {
         {
             // Erasure: __ctor<Loc, Declaration, boolean>
             public  VarExp(Loc loc, Declaration var, boolean hasOverloads) {
-                super(loc, TOK.variable, 29, var, var.isVarDeclaration() == null && hasOverloads);
+                if (var.isVarDeclaration() != null)
+                {
+                    hasOverloads = false;
+                }
+                super(loc, TOK.variable, 29, var, hasOverloads);
                 this.type = var.type;
             }
 
@@ -9190,6 +9199,11 @@ public class astbase {
             public ForeachRangeStatement rangefe = null;
             // Erasure: __ctor<Loc, ForeachStatement, ForeachRangeStatement>
             public  StaticForeach(Loc loc, ForeachStatement aggrfe, ForeachRangeStatement rangefe) {
+                {
+                    {
+                        assert(aggrfe != null ^ rangefe != null);
+                    }
+                }
                 super();
                 this.loc.opAssign(loc.copy());
                 this.aggrfe = aggrfe;
diff --git a/src/main/java/org/dlang/dmd/lexer.java b/src/main/java/org/dlang/dmd/lexer.java
index 54c84e5..fd983fe 100644
--- a/src/main/java/org/dlang/dmd/lexer.java
+++ b/src/main/java/org/dlang/dmd/lexer.java
@@ -1379,6 +1379,7 @@ public class lexer {
                     } while(__dispatch10 != 0);
                 }
             }
+            throw new AssertionError("Unreachable code!");
         }
 
         // Erasure: delimitedStringConstant<Ptr>
@@ -1808,15 +1809,11 @@ public class lexer {
                                     {
                                         /*goto Ldone*/throw Dispatch0.INSTANCE;
                                     }
-                                    /*goto Lreal*/
-                                    this.p.value = pcopy(start);
-                                    return this.inreal(t);
+                                    /*goto Lreal*/throw Dispatch.INSTANCE;
                                 case 105:
                                 case 102:
                                 case 70:
-                                    /*goto Lreal*/
-                                    this.p.value = pcopy(start);
-                                    return this.inreal(t);
+                                    /*goto Lreal*/throw Dispatch.INSTANCE;
                                 case 95:
                                     this.p.value.plusAssign(1);
                                     base = 8;
@@ -1824,9 +1821,7 @@ public class lexer {
                                 case 76:
                                     if (((this.p.value.get(1) & 0xFF) == 105))
                                     {
-                                        /*goto Lreal*/
-                                        this.p.value = pcopy(start);
-                                        return this.inreal(t);
+                                        /*goto Lreal*/throw Dispatch.INSTANCE;
                                     }
                                     break;
                                 default:
diff --git a/src/main/java/org/dlang/dmd/parse.java b/src/main/java/org/dlang/dmd/parse.java
index 81eb252..ae6424d 100644
--- a/src/main/java/org/dlang/dmd/parse.java
+++ b/src/main/java/org/dlang/dmd/parse.java
@@ -2747,13 +2747,14 @@ public class parse {
                                         }
                                         else
                                         {
-                                            /*goto _else*/
-                                            at = this.parseType(ptr(ai), null);
+                                            /*goto _else*/{ __dispatch9 = -2; continue dispatched_9; }
                                         }
                                     }
                                     else
                                     {
                                     /*_else:*/
+                                    case -2:
+                                    __dispatch9 = 0;
                                         at = this.parseType(ptr(ai), null);
                                     }
                                     ae = null;
@@ -3686,9 +3687,9 @@ public class parse {
                     default:
                     return t;
                 }
-                //throw new AssertionError("Unreachable code!");
+                throw new AssertionError("Unreachable code!");
             }
-            //throw new AssertionError("Unreachable code!");
+            throw new AssertionError("Unreachable code!");
         }
 
         // Erasure: parseDeclarator<Type, Ptr, Ptr, Ptr, long, Ptr, Ptr>
@@ -4519,8 +4520,7 @@ public class parse {
             boolean literal = f.isFuncLiteralDeclaration() != null;
             this.linkage = LINK.d;
             boolean requireDo = false;
-        L1:
-            while(true)
+        /*L1:*/
             {
                 int __dispatch23 = 0;
                 dispatched_23:
@@ -4581,7 +4581,7 @@ public class parse {
                                 (f.frequires.get()).push(this.parseStatement(6, null, null));
                                 requireDo = true;
                             }
-                            /*goto L1*/continue L1;
+                            /*goto L1*/throw Dispatch0.INSTANCE;
                         case 176:
                             Loc loc_1 = this.token.value.loc.copy();
                             this.nextToken();
@@ -4670,7 +4670,6 @@ public class parse {
                         break;
                     }
                 } while(__dispatch23 != 0);
-                break;
             }
             if (literal && (f.fbody == null))
             {
@@ -5099,9 +5098,6 @@ public class parse {
                 return new ASTBase.StaticForeachDeclaration(new ASTBase.StaticForeach(loc, aggrfe, null), this.parseBlock(pLastDecl, null));
             }
         }
-            long stc = 0;
-            long storageClass = 0;
-            ASTBase.Parameter param = null;
 
 
         // Erasure: parseStatement<int, Ptr, Ptr>
@@ -5337,7 +5333,7 @@ public class parse {
                                 }
                                 else
                                 {
-                                    s = new ASTBase.ExpStatement(loc, (ASTBase.Dsymbol)null);
+                                    s = new ASTBase.ExpStatement(loc, null);
                                 }
                                 if ((flags & ParseStatementFlags.scope_) != 0)
                                 {
@@ -5446,7 +5442,7 @@ public class parse {
                                 }
                             }
                             this.nextToken();
-                            s = new ASTBase.ExpStatement(loc, (ASTBase.Expression)null);
+                            s = new ASTBase.ExpStatement(loc, null);
                             break;
                         case 187:
                             ASTBase.Statement _body_1 = null;
@@ -5517,11 +5513,12 @@ public class parse {
                             s = this.parseForeach00(loc);
                             break;
                         case 183:
+                            ASTBase.Parameter param = null;
                             ASTBase.Expression condition_3 = null;
                             this.nextToken();
                             this.check(TOK.leftParentheses);
-                            storageClass = 0L;
-                            stc = 0L;
+                            long storageClass = 0L;
+                            long stc = 0L;
                         /*LagainStc:*/
                         case -5:
                         __dispatch27 = 0;
@@ -6390,7 +6387,6 @@ public class parse {
                     }
                 } while(__dispatch30 != 0);
             }
-            return null;
         }
 
         // Erasure: parseDefaultInitExp<>
@@ -6470,7 +6466,7 @@ public class parse {
         }
 
 
-        public static class NeedDeclaratorId
+        public static class NeedDeclaratorId 
         {
             public static final int no = 0;
             public static final int opt = 1;
@@ -6566,98 +6562,102 @@ public class parse {
                                     /*goto L4*/throw Dispatch.INSTANCE;
                                 }
                                 /*goto L3*/{ __dispatch36 = -3; continue dispatched_36; }
-                            /*L2:*/
-                            case -2:
-                            __dispatch36 = 0;
-                                t.value = pcopy(this.peek(t.value));
-                            /*L3:*/
-                            case -3:
-                            __dispatch36 = 0;
-                                if ((((t.value.get()).value & 0xFF) == 97))
-                                {
-                                /*Ldot:*/
-                                    t.value = pcopy(this.peek(t.value));
-                                    if ((((t.value.get()).value & 0xFF) != 120))
-                                    {
-                                        /*goto Lfalse*/throw Dispatch0.INSTANCE;
-                                    }
-                                    t.value = pcopy(this.peek(t.value));
-                                    if ((((t.value.get()).value & 0xFF) != 91))
-                                    {
-                                        /*goto L3*/{ __dispatch36 = -3; continue dispatched_36; }
-                                    }
-                                /*L4:*/
+                            L_outer18:
+                                for (; 1 != 0;){
+                                /*L2:*/
+                                case -2:
+                                __dispatch36 = 0;
                                     t.value = pcopy(this.peek(t.value));
+                                /*L3:*/
+                                case -3:
+                                __dispatch36 = 0;
+                                    if ((((t.value.get()).value & 0xFF) == 97))
                                     {
-                                        int __dispatch37 = 0;
-                                        dispatched_37:
-                                        do {
-                                            switch (__dispatch37 != 0 ? __dispatch37 : ((t.value.get()).value & 0xFF))
-                                            {
-                                                case 120:
-                                                    /*goto L5*/{ __dispatch36 = -1; continue dispatched_36; }
-                                                case 1:
-                                                    if (!this.skipParens(t.value, ptr(t)))
-                                                    {
-                                                        /*goto Lfalse*/throw Dispatch0.INSTANCE;
-                                                    }
-                                                    /*goto L3*/{ __dispatch36 = -3; continue dispatched_36; }
-                                                case 149:
-                                                case 150:
-                                                case 151:
-                                                case 148:
-                                                case 129:
-                                                case 130:
-                                                case 131:
-                                                case 132:
-                                                case 133:
-                                                case 134:
-                                                case 135:
-                                                case 136:
-                                                case 137:
-                                                case 138:
-                                                case 139:
-                                                case 140:
-                                                case 141:
-                                                case 142:
-                                                case 143:
-                                                case 144:
-                                                case 145:
-                                                case 146:
-                                                case 147:
-                                                case 128:
-                                                case 105:
-                                                case 106:
-                                                case 107:
-                                                case 108:
-                                                case 109:
-                                                case 110:
-                                                case 111:
-                                                case 112:
-                                                case 113:
-                                                case 114:
-                                                case 115:
-                                                case 116:
-                                                case 13:
-                                                case 15:
-                                                case 16:
-                                                case 117:
-                                                case 118:
-                                                case 119:
-                                                case 121:
-                                                case 122:
-                                                case 219:
-                                                case 220:
-                                                case 218:
-                                                case 221:
-                                                case 222:
-                                                case 223:
-                                                    /*goto L2*/{ __dispatch36 = -2; continue dispatched_36; }
-                                                default:
-                                                /*goto Lfalse*/throw Dispatch0.INSTANCE;
-                                            }
-                                        } while(__dispatch37 != 0);
+                                    /*Ldot:*/
+                                        t.value = pcopy(this.peek(t.value));
+                                        if ((((t.value.get()).value & 0xFF) != 120))
+                                        {
+                                            /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                        }
+                                        t.value = pcopy(this.peek(t.value));
+                                        if ((((t.value.get()).value & 0xFF) != 91))
+                                        {
+                                            /*goto L3*/{ __dispatch36 = -3; continue dispatched_36; }
+                                        }
+                                    /*L4:*/
+                                        t.value = pcopy(this.peek(t.value));
+                                        {
+                                            int __dispatch37 = 0;
+                                            dispatched_37:
+                                            do {
+                                                switch (__dispatch37 != 0 ? __dispatch37 : ((t.value.get()).value & 0xFF))
+                                                {
+                                                    case 120:
+                                                        /*goto L5*/{ __dispatch36 = -1; continue dispatched_36; }
+                                                    case 1:
+                                                        if (!this.skipParens(t.value, ptr(t)))
+                                                        {
+                                                            /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                                        }
+                                                        /*goto L3*/{ __dispatch36 = -3; continue dispatched_36; }
+                                                    case 149:
+                                                    case 150:
+                                                    case 151:
+                                                    case 148:
+                                                    case 129:
+                                                    case 130:
+                                                    case 131:
+                                                    case 132:
+                                                    case 133:
+                                                    case 134:
+                                                    case 135:
+                                                    case 136:
+                                                    case 137:
+                                                    case 138:
+                                                    case 139:
+                                                    case 140:
+                                                    case 141:
+                                                    case 142:
+                                                    case 143:
+                                                    case 144:
+                                                    case 145:
+                                                    case 146:
+                                                    case 147:
+                                                    case 128:
+                                                    case 105:
+                                                    case 106:
+                                                    case 107:
+                                                    case 108:
+                                                    case 109:
+                                                    case 110:
+                                                    case 111:
+                                                    case 112:
+                                                    case 113:
+                                                    case 114:
+                                                    case 115:
+                                                    case 116:
+                                                    case 13:
+                                                    case 15:
+                                                    case 16:
+                                                    case 117:
+                                                    case 118:
+                                                    case 119:
+                                                    case 121:
+                                                    case 122:
+                                                    case 219:
+                                                    case 220:
+                                                    case 218:
+                                                    case 221:
+                                                    case 222:
+                                                    case 223:
+                                                        /*goto L2*/{ __dispatch36 = -2; continue dispatched_36; }
+                                                    default:
+                                                    /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                                }
+                                            } while(__dispatch37 != 0);
+                                        }
                                     }
+                                    break;
                                 }
                                 break;
                             case 97:
@@ -6949,7 +6949,7 @@ public class parse {
                     } while(__dispatch39 != 0);
                 }
             }
-            //throw new AssertionError("Unreachable code!");
+            throw new AssertionError("Unreachable code!");
         }
 
         // defaulted all parameters starting with #5
@@ -6968,7 +6968,7 @@ public class parse {
         L_outer20:
             for (; 1 != 0;t.value = pcopy(this.peek(t.value))){
             /*L1:*/
-                while (true) try {
+                {
                     int __dispatch41 = 0;
                     dispatched_41:
                     do {
@@ -7005,7 +7005,7 @@ public class parse {
                                 }
                                 /*goto L1*/throw Dispatch0.INSTANCE;
                             default:
-
+                            {
                                 if (!this.isBasicType(ptr(t)))
                                 {
                                     return false;
@@ -7025,7 +7025,7 @@ public class parse {
                                     {
                                         return false;
                                     }
-
+                                }
                                 if ((((t.value.get()).value & 0xFF) == 10))
                                 {
                                     t.value = pcopy(this.peek(t.value));
@@ -7039,8 +7039,7 @@ public class parse {
                             break;
                         }
                     } while(__dispatch41 != 0);
-                    break;
-                } catch(Dispatch0 __d0) {}
+                }
                 break;
             }
             if ((((t.value.get()).value & 0xFF) != 2))
@@ -11144,12 +11143,14 @@ public class parse {
                                         }
                                         else
                                         {
-                                            /*goto _else*/
-                                            at = this.parseType(ptr(ai), null);
+                                            /*goto _else*/{ __dispatch64 = -2; continue dispatched_64; }
                                         }
                                     }
                                     else
                                     {
+                                    /*_else:*/
+                                    case -2:
+                                    __dispatch64 = 0;
                                         at = this.parseType(ptr(ai), null);
                                     }
                                     ae = null;
@@ -14954,103 +14955,109 @@ public class parse {
                                 t.value = pcopy(this.peek(t.value));
                                 if ((((t.value.get()).value & 0xFF) == 91))
                                 {
-                                    /*goto L4*/{ __dispatch91 = -5; continue dispatched_91; }
+                                    /*goto L4*/throw Dispatch.INSTANCE;
                                 }
                                 /*goto L3*/{ __dispatch91 = -3; continue dispatched_91; }
-                            /*L2:*/
-                            case -2:
-                            __dispatch91 = 0;
-                                t.value = pcopy(this.peek(t.value));
-                            /*L3:*/
-                            case -3:
-                            __dispatch91 = 0;
-                                if ((((t.value.get()).value & 0xFF) != 97)) break;
-                            /*Ldot:*/
-                            case -4:
-                                t.value = pcopy(this.peek(t.value));
-                                if ((((t.value.get()).value & 0xFF) != 120))
-                                {
-                                    /*goto Lfalse*/throw Dispatch0.INSTANCE;
-                                }
-                                t.value = pcopy(this.peek(t.value));
-                                if ((((t.value.get()).value & 0xFF) != 91))
-                                {
-                                    /*goto L3*/{ __dispatch91 = -3; continue dispatched_91; }
-                                }
-                            /*L4:*/
-                            case -5:
-                                t.value = pcopy(this.peek(t.value));
-                                int __dispatch92 = 0;
-                                dispatched_92:
-                                do {
-                                    switch (__dispatch92 != 0 ? __dispatch92 : ((t.value.get()).value & 0xFF))
+                            L_outer40:
+                                for (; 1 != 0;){
+                                /*L2:*/
+                                case -2:
+                                __dispatch91 = 0;
+                                    t.value = pcopy(this.peek(t.value));
+                                /*L3:*/
+                                case -3:
+                                __dispatch91 = 0;
+                                    if ((((t.value.get()).value & 0xFF) == 97))
                                     {
-                                        case 120:
-                                            /*goto L5*/{ __dispatch91 = -1; continue dispatched_91; }
-                                        case 1:
-                                            if (!this.skipParens(t.value, ptr(t)))
-                                            {
-                                                /*goto Lfalse*/throw Dispatch0.INSTANCE;
-                                            }
+                                    /*Ldot:*/
+                                        t.value = pcopy(this.peek(t.value));
+                                        if ((((t.value.get()).value & 0xFF) != 120))
+                                        {
+                                            /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                        }
+                                        t.value = pcopy(this.peek(t.value));
+                                        if ((((t.value.get()).value & 0xFF) != 91))
+                                        {
                                             /*goto L3*/{ __dispatch91 = -3; continue dispatched_91; }
-                                        case 149:
-                                        case 150:
-                                        case 151:
-                                        case 148:
-                                        case 129:
-                                        case 130:
-                                        case 131:
-                                        case 132:
-                                        case 133:
-                                        case 134:
-                                        case 135:
-                                        case 136:
-                                        case 137:
-                                        case 138:
-                                        case 139:
-                                        case 140:
-                                        case 141:
-                                        case 142:
-                                        case 143:
-                                        case 144:
-                                        case 145:
-                                        case 146:
-                                        case 147:
-                                        case 128:
-                                        case 105:
-                                        case 106:
-                                        case 107:
-                                        case 108:
-                                        case 109:
-                                        case 110:
-                                        case 111:
-                                        case 112:
-                                        case 113:
-                                        case 114:
-                                        case 115:
-                                        case 116:
-                                        case 13:
-                                        case 15:
-                                        case 16:
-                                        case 117:
-                                        case 118:
-                                        case 119:
-                                        case 121:
-                                        case 122:
-                                        case 219:
-                                        case 220:
-                                        case 218:
-                                        case 221:
-                                        case 222:
-                                        case 223:
-                                            /*goto L2*/{ __dispatch91 = -2; continue dispatched_91; }
-                                        default:
-                                        /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                        }
+                                    /*L4:*/
+                                        t.value = pcopy(this.peek(t.value));
+                                        {
+                                            int __dispatch92 = 0;
+                                            dispatched_92:
+                                            do {
+                                                switch (__dispatch92 != 0 ? __dispatch92 : ((t.value.get()).value & 0xFF))
+                                                {
+                                                    case 120:
+                                                        /*goto L5*/{ __dispatch91 = -1; continue dispatched_91; }
+                                                    case 1:
+                                                        if (!this.skipParens(t.value, ptr(t)))
+                                                        {
+                                                            /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                                        }
+                                                        /*goto L3*/{ __dispatch91 = -3; continue dispatched_91; }
+                                                    case 149:
+                                                    case 150:
+                                                    case 151:
+                                                    case 148:
+                                                    case 129:
+                                                    case 130:
+                                                    case 131:
+                                                    case 132:
+                                                    case 133:
+                                                    case 134:
+                                                    case 135:
+                                                    case 136:
+                                                    case 137:
+                                                    case 138:
+                                                    case 139:
+                                                    case 140:
+                                                    case 141:
+                                                    case 142:
+                                                    case 143:
+                                                    case 144:
+                                                    case 145:
+                                                    case 146:
+                                                    case 147:
+                                                    case 128:
+                                                    case 105:
+                                                    case 106:
+                                                    case 107:
+                                                    case 108:
+                                                    case 109:
+                                                    case 110:
+                                                    case 111:
+                                                    case 112:
+                                                    case 113:
+                                                    case 114:
+                                                    case 115:
+                                                    case 116:
+                                                    case 13:
+                                                    case 15:
+                                                    case 16:
+                                                    case 117:
+                                                    case 118:
+                                                    case 119:
+                                                    case 121:
+                                                    case 122:
+                                                    case 219:
+                                                    case 220:
+                                                    case 218:
+                                                    case 221:
+                                                    case 222:
+                                                    case 223:
+                                                        /*goto L2*/{ __dispatch91 = -2; continue dispatched_91; }
+                                                    default:
+                                                    /*goto Lfalse*/throw Dispatch0.INSTANCE;
+                                                }
+                                            } while(__dispatch92 != 0);
+                                        }
                                     }
-                                } while(__dispatch92 != 0);
+                                    break;
+                                }
                                 break;
                             case 97:
-                                /*goto Ldot*/{ __dispatch91 = -4; continue dispatched_91; }
+                                /*goto Ldot*/throw Dispatch.INSTANCE;
                             case 39:
                             case 229:
                                 t.value = pcopy(this.peek(t.value));
@@ -15357,7 +15364,7 @@ public class parse {
         L_outer42:
             for (; 1 != 0;t.value = pcopy(this.peek(t.value))){
             /*L1:*/
-                while (true) try {
+                {
                     int __dispatch96 = 0;
                     dispatched_96:
                     do {
@@ -15394,6 +15401,7 @@ public class parse {
                                 }
                                 /*goto L1*/throw Dispatch0.INSTANCE;
                             default:
+                            {
                                 if (!this.isBasicType(ptr(t)))
                                 {
                                     return false;
@@ -15425,9 +15433,9 @@ public class parse {
                                 continue L_outer42;
                             }
                             break;
+                        }
                     } while(__dispatch96 != 0);
-                    break;
-                } catch (Dispatch0 __dispatch) {}
+                }
                 break;
             }
             if ((((t.value.get()).value & 0xFF) != 2))
